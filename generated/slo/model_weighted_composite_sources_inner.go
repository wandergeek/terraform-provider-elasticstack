/*
SLOs

OpenAPI schema for SLOs endpoints

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the WeightedCompositeSourcesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WeightedCompositeSourcesInner{}

// WeightedCompositeSourcesInner struct for WeightedCompositeSourcesInner
type WeightedCompositeSourcesInner struct {
	// The id of the SLO.
	Id string `json:"id"`
	// The revision number of the SLO.
	Revision float32 `json:"revision"`
	// The weight to apply to this SLO.
	Weight float32 `json:"weight"`
}

// NewWeightedCompositeSourcesInner instantiates a new WeightedCompositeSourcesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeightedCompositeSourcesInner(id string, revision float32, weight float32) *WeightedCompositeSourcesInner {
	this := WeightedCompositeSourcesInner{}
	this.Id = id
	this.Revision = revision
	this.Weight = weight
	return &this
}

// NewWeightedCompositeSourcesInnerWithDefaults instantiates a new WeightedCompositeSourcesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeightedCompositeSourcesInnerWithDefaults() *WeightedCompositeSourcesInner {
	this := WeightedCompositeSourcesInner{}
	return &this
}

// GetId returns the Id field value
func (o *WeightedCompositeSourcesInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WeightedCompositeSourcesInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WeightedCompositeSourcesInner) SetId(v string) {
	o.Id = v
}

// GetRevision returns the Revision field value
func (o *WeightedCompositeSourcesInner) GetRevision() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *WeightedCompositeSourcesInner) GetRevisionOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *WeightedCompositeSourcesInner) SetRevision(v float32) {
	o.Revision = v
}

// GetWeight returns the Weight field value
func (o *WeightedCompositeSourcesInner) GetWeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *WeightedCompositeSourcesInner) GetWeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *WeightedCompositeSourcesInner) SetWeight(v float32) {
	o.Weight = v
}

func (o WeightedCompositeSourcesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WeightedCompositeSourcesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["revision"] = o.Revision
	toSerialize["weight"] = o.Weight
	return toSerialize, nil
}

type NullableWeightedCompositeSourcesInner struct {
	value *WeightedCompositeSourcesInner
	isSet bool
}

func (v NullableWeightedCompositeSourcesInner) Get() *WeightedCompositeSourcesInner {
	return v.value
}

func (v *NullableWeightedCompositeSourcesInner) Set(val *WeightedCompositeSourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWeightedCompositeSourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWeightedCompositeSourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeightedCompositeSourcesInner(val *WeightedCompositeSourcesInner) *NullableWeightedCompositeSourcesInner {
	return &NullableWeightedCompositeSourcesInner{value: val, isSet: true}
}

func (v NullableWeightedCompositeSourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeightedCompositeSourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

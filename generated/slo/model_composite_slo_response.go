/*
SLOs

OpenAPI schema for SLOs endpoints

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the CompositeSloResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompositeSloResponse{}

// CompositeSloResponse struct for CompositeSloResponse
type CompositeSloResponse struct {
	// The identifier of the composite SLO.
	Id *string `json:"id,omitempty"`
	// The name of the composite SLO.
	Name            *string                      `json:"name,omitempty"`
	TimeWindow      *TimeWindowRolling           `json:"timeWindow,omitempty"`
	BudgetingMethod *BudgetingMethod             `json:"budgetingMethod,omitempty"`
	CompositeMethod *CompositeMethod             `json:"compositeMethod,omitempty"`
	Objective       *Objective                   `json:"objective,omitempty"`
	Sources         *CompositeSloResponseSources `json:"sources,omitempty"`
	Summary         *Summary                     `json:"summary,omitempty"`
	// The creation date
	CreatedAt *string `json:"createdAt,omitempty"`
	// The last update date
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

// NewCompositeSloResponse instantiates a new CompositeSloResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompositeSloResponse() *CompositeSloResponse {
	this := CompositeSloResponse{}
	return &this
}

// NewCompositeSloResponseWithDefaults instantiates a new CompositeSloResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompositeSloResponseWithDefaults() *CompositeSloResponse {
	this := CompositeSloResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CompositeSloResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositeSloResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CompositeSloResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CompositeSloResponse) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CompositeSloResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositeSloResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CompositeSloResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CompositeSloResponse) SetName(v string) {
	o.Name = &v
}

// GetTimeWindow returns the TimeWindow field value if set, zero value otherwise.
func (o *CompositeSloResponse) GetTimeWindow() TimeWindowRolling {
	if o == nil || IsNil(o.TimeWindow) {
		var ret TimeWindowRolling
		return ret
	}
	return *o.TimeWindow
}

// GetTimeWindowOk returns a tuple with the TimeWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositeSloResponse) GetTimeWindowOk() (*TimeWindowRolling, bool) {
	if o == nil || IsNil(o.TimeWindow) {
		return nil, false
	}
	return o.TimeWindow, true
}

// HasTimeWindow returns a boolean if a field has been set.
func (o *CompositeSloResponse) HasTimeWindow() bool {
	if o != nil && !IsNil(o.TimeWindow) {
		return true
	}

	return false
}

// SetTimeWindow gets a reference to the given TimeWindowRolling and assigns it to the TimeWindow field.
func (o *CompositeSloResponse) SetTimeWindow(v TimeWindowRolling) {
	o.TimeWindow = &v
}

// GetBudgetingMethod returns the BudgetingMethod field value if set, zero value otherwise.
func (o *CompositeSloResponse) GetBudgetingMethod() BudgetingMethod {
	if o == nil || IsNil(o.BudgetingMethod) {
		var ret BudgetingMethod
		return ret
	}
	return *o.BudgetingMethod
}

// GetBudgetingMethodOk returns a tuple with the BudgetingMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositeSloResponse) GetBudgetingMethodOk() (*BudgetingMethod, bool) {
	if o == nil || IsNil(o.BudgetingMethod) {
		return nil, false
	}
	return o.BudgetingMethod, true
}

// HasBudgetingMethod returns a boolean if a field has been set.
func (o *CompositeSloResponse) HasBudgetingMethod() bool {
	if o != nil && !IsNil(o.BudgetingMethod) {
		return true
	}

	return false
}

// SetBudgetingMethod gets a reference to the given BudgetingMethod and assigns it to the BudgetingMethod field.
func (o *CompositeSloResponse) SetBudgetingMethod(v BudgetingMethod) {
	o.BudgetingMethod = &v
}

// GetCompositeMethod returns the CompositeMethod field value if set, zero value otherwise.
func (o *CompositeSloResponse) GetCompositeMethod() CompositeMethod {
	if o == nil || IsNil(o.CompositeMethod) {
		var ret CompositeMethod
		return ret
	}
	return *o.CompositeMethod
}

// GetCompositeMethodOk returns a tuple with the CompositeMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositeSloResponse) GetCompositeMethodOk() (*CompositeMethod, bool) {
	if o == nil || IsNil(o.CompositeMethod) {
		return nil, false
	}
	return o.CompositeMethod, true
}

// HasCompositeMethod returns a boolean if a field has been set.
func (o *CompositeSloResponse) HasCompositeMethod() bool {
	if o != nil && !IsNil(o.CompositeMethod) {
		return true
	}

	return false
}

// SetCompositeMethod gets a reference to the given CompositeMethod and assigns it to the CompositeMethod field.
func (o *CompositeSloResponse) SetCompositeMethod(v CompositeMethod) {
	o.CompositeMethod = &v
}

// GetObjective returns the Objective field value if set, zero value otherwise.
func (o *CompositeSloResponse) GetObjective() Objective {
	if o == nil || IsNil(o.Objective) {
		var ret Objective
		return ret
	}
	return *o.Objective
}

// GetObjectiveOk returns a tuple with the Objective field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositeSloResponse) GetObjectiveOk() (*Objective, bool) {
	if o == nil || IsNil(o.Objective) {
		return nil, false
	}
	return o.Objective, true
}

// HasObjective returns a boolean if a field has been set.
func (o *CompositeSloResponse) HasObjective() bool {
	if o != nil && !IsNil(o.Objective) {
		return true
	}

	return false
}

// SetObjective gets a reference to the given Objective and assigns it to the Objective field.
func (o *CompositeSloResponse) SetObjective(v Objective) {
	o.Objective = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *CompositeSloResponse) GetSources() CompositeSloResponseSources {
	if o == nil || IsNil(o.Sources) {
		var ret CompositeSloResponseSources
		return ret
	}
	return *o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositeSloResponse) GetSourcesOk() (*CompositeSloResponseSources, bool) {
	if o == nil || IsNil(o.Sources) {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *CompositeSloResponse) HasSources() bool {
	if o != nil && !IsNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given CompositeSloResponseSources and assigns it to the Sources field.
func (o *CompositeSloResponse) SetSources(v CompositeSloResponseSources) {
	o.Sources = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *CompositeSloResponse) GetSummary() Summary {
	if o == nil || IsNil(o.Summary) {
		var ret Summary
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositeSloResponse) GetSummaryOk() (*Summary, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *CompositeSloResponse) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given Summary and assigns it to the Summary field.
func (o *CompositeSloResponse) SetSummary(v Summary) {
	o.Summary = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CompositeSloResponse) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositeSloResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CompositeSloResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CompositeSloResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CompositeSloResponse) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositeSloResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CompositeSloResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CompositeSloResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o CompositeSloResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompositeSloResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TimeWindow) {
		toSerialize["timeWindow"] = o.TimeWindow
	}
	if !IsNil(o.BudgetingMethod) {
		toSerialize["budgetingMethod"] = o.BudgetingMethod
	}
	if !IsNil(o.CompositeMethod) {
		toSerialize["compositeMethod"] = o.CompositeMethod
	}
	if !IsNil(o.Objective) {
		toSerialize["objective"] = o.Objective
	}
	if !IsNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableCompositeSloResponse struct {
	value *CompositeSloResponse
	isSet bool
}

func (v NullableCompositeSloResponse) Get() *CompositeSloResponse {
	return v.value
}

func (v *NullableCompositeSloResponse) Set(val *CompositeSloResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCompositeSloResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCompositeSloResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompositeSloResponse(val *CompositeSloResponse) *NullableCompositeSloResponse {
	return &NullableCompositeSloResponse{value: val, isSet: true}
}

func (v NullableCompositeSloResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompositeSloResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

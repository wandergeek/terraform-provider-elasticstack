/*
SLOs

OpenAPI schema for SLOs endpoints

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the FindCompositeSloResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FindCompositeSloResponse{}

// FindCompositeSloResponse A paginated response of composite SLOs matching the query.
type FindCompositeSloResponse struct {
	Page    *float32               `json:"page,omitempty"`
	PerPage *float32               `json:"perPage,omitempty"`
	Total   *float32               `json:"total,omitempty"`
	Results []CompositeSloResponse `json:"results,omitempty"`
}

// NewFindCompositeSloResponse instantiates a new FindCompositeSloResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFindCompositeSloResponse() *FindCompositeSloResponse {
	this := FindCompositeSloResponse{}
	return &this
}

// NewFindCompositeSloResponseWithDefaults instantiates a new FindCompositeSloResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFindCompositeSloResponseWithDefaults() *FindCompositeSloResponse {
	this := FindCompositeSloResponse{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *FindCompositeSloResponse) GetPage() float32 {
	if o == nil || IsNil(o.Page) {
		var ret float32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindCompositeSloResponse) GetPageOk() (*float32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *FindCompositeSloResponse) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given float32 and assigns it to the Page field.
func (o *FindCompositeSloResponse) SetPage(v float32) {
	o.Page = &v
}

// GetPerPage returns the PerPage field value if set, zero value otherwise.
func (o *FindCompositeSloResponse) GetPerPage() float32 {
	if o == nil || IsNil(o.PerPage) {
		var ret float32
		return ret
	}
	return *o.PerPage
}

// GetPerPageOk returns a tuple with the PerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindCompositeSloResponse) GetPerPageOk() (*float32, bool) {
	if o == nil || IsNil(o.PerPage) {
		return nil, false
	}
	return o.PerPage, true
}

// HasPerPage returns a boolean if a field has been set.
func (o *FindCompositeSloResponse) HasPerPage() bool {
	if o != nil && !IsNil(o.PerPage) {
		return true
	}

	return false
}

// SetPerPage gets a reference to the given float32 and assigns it to the PerPage field.
func (o *FindCompositeSloResponse) SetPerPage(v float32) {
	o.PerPage = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *FindCompositeSloResponse) GetTotal() float32 {
	if o == nil || IsNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindCompositeSloResponse) GetTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *FindCompositeSloResponse) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *FindCompositeSloResponse) SetTotal(v float32) {
	o.Total = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *FindCompositeSloResponse) GetResults() []CompositeSloResponse {
	if o == nil || IsNil(o.Results) {
		var ret []CompositeSloResponse
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FindCompositeSloResponse) GetResultsOk() ([]CompositeSloResponse, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *FindCompositeSloResponse) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []CompositeSloResponse and assigns it to the Results field.
func (o *FindCompositeSloResponse) SetResults(v []CompositeSloResponse) {
	o.Results = v
}

func (o FindCompositeSloResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FindCompositeSloResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.PerPage) {
		toSerialize["perPage"] = o.PerPage
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullableFindCompositeSloResponse struct {
	value *FindCompositeSloResponse
	isSet bool
}

func (v NullableFindCompositeSloResponse) Get() *FindCompositeSloResponse {
	return v.value
}

func (v *NullableFindCompositeSloResponse) Set(val *FindCompositeSloResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFindCompositeSloResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFindCompositeSloResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindCompositeSloResponse(val *FindCompositeSloResponse) *NullableFindCompositeSloResponse {
	return &NullableFindCompositeSloResponse{value: val, isSet: true}
}

func (v NullableFindCompositeSloResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindCompositeSloResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

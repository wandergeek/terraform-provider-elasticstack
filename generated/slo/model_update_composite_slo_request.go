/*
SLOs

OpenAPI schema for SLOs endpoints

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the UpdateCompositeSloRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCompositeSloRequest{}

// UpdateCompositeSloRequest The update composite SLO API request body. The provided source SLOs must exists and their budgeting method and time window must match the one from the composite SLO.
type UpdateCompositeSloRequest struct {
	// A unique identifier for the composite SLO. Must be between 8 and 36 chars
	Id *string `json:"id,omitempty"`
	// A name for the composite SLO.
	Name            *string                      `json:"name,omitempty"`
	TimeWindow      *TimeWindowRolling           `json:"timeWindow,omitempty"`
	BudgetingMethod *BudgetingMethod             `json:"budgetingMethod,omitempty"`
	CompositeMethod *CompositeMethod             `json:"compositeMethod,omitempty"`
	Objective       *Objective                   `json:"objective,omitempty"`
	Sources         *CompositeSloResponseSources `json:"sources,omitempty"`
}

// NewUpdateCompositeSloRequest instantiates a new UpdateCompositeSloRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCompositeSloRequest() *UpdateCompositeSloRequest {
	this := UpdateCompositeSloRequest{}
	return &this
}

// NewUpdateCompositeSloRequestWithDefaults instantiates a new UpdateCompositeSloRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCompositeSloRequestWithDefaults() *UpdateCompositeSloRequest {
	this := UpdateCompositeSloRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateCompositeSloRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCompositeSloRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateCompositeSloRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateCompositeSloRequest) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateCompositeSloRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCompositeSloRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateCompositeSloRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateCompositeSloRequest) SetName(v string) {
	o.Name = &v
}

// GetTimeWindow returns the TimeWindow field value if set, zero value otherwise.
func (o *UpdateCompositeSloRequest) GetTimeWindow() TimeWindowRolling {
	if o == nil || IsNil(o.TimeWindow) {
		var ret TimeWindowRolling
		return ret
	}
	return *o.TimeWindow
}

// GetTimeWindowOk returns a tuple with the TimeWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCompositeSloRequest) GetTimeWindowOk() (*TimeWindowRolling, bool) {
	if o == nil || IsNil(o.TimeWindow) {
		return nil, false
	}
	return o.TimeWindow, true
}

// HasTimeWindow returns a boolean if a field has been set.
func (o *UpdateCompositeSloRequest) HasTimeWindow() bool {
	if o != nil && !IsNil(o.TimeWindow) {
		return true
	}

	return false
}

// SetTimeWindow gets a reference to the given TimeWindowRolling and assigns it to the TimeWindow field.
func (o *UpdateCompositeSloRequest) SetTimeWindow(v TimeWindowRolling) {
	o.TimeWindow = &v
}

// GetBudgetingMethod returns the BudgetingMethod field value if set, zero value otherwise.
func (o *UpdateCompositeSloRequest) GetBudgetingMethod() BudgetingMethod {
	if o == nil || IsNil(o.BudgetingMethod) {
		var ret BudgetingMethod
		return ret
	}
	return *o.BudgetingMethod
}

// GetBudgetingMethodOk returns a tuple with the BudgetingMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCompositeSloRequest) GetBudgetingMethodOk() (*BudgetingMethod, bool) {
	if o == nil || IsNil(o.BudgetingMethod) {
		return nil, false
	}
	return o.BudgetingMethod, true
}

// HasBudgetingMethod returns a boolean if a field has been set.
func (o *UpdateCompositeSloRequest) HasBudgetingMethod() bool {
	if o != nil && !IsNil(o.BudgetingMethod) {
		return true
	}

	return false
}

// SetBudgetingMethod gets a reference to the given BudgetingMethod and assigns it to the BudgetingMethod field.
func (o *UpdateCompositeSloRequest) SetBudgetingMethod(v BudgetingMethod) {
	o.BudgetingMethod = &v
}

// GetCompositeMethod returns the CompositeMethod field value if set, zero value otherwise.
func (o *UpdateCompositeSloRequest) GetCompositeMethod() CompositeMethod {
	if o == nil || IsNil(o.CompositeMethod) {
		var ret CompositeMethod
		return ret
	}
	return *o.CompositeMethod
}

// GetCompositeMethodOk returns a tuple with the CompositeMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCompositeSloRequest) GetCompositeMethodOk() (*CompositeMethod, bool) {
	if o == nil || IsNil(o.CompositeMethod) {
		return nil, false
	}
	return o.CompositeMethod, true
}

// HasCompositeMethod returns a boolean if a field has been set.
func (o *UpdateCompositeSloRequest) HasCompositeMethod() bool {
	if o != nil && !IsNil(o.CompositeMethod) {
		return true
	}

	return false
}

// SetCompositeMethod gets a reference to the given CompositeMethod and assigns it to the CompositeMethod field.
func (o *UpdateCompositeSloRequest) SetCompositeMethod(v CompositeMethod) {
	o.CompositeMethod = &v
}

// GetObjective returns the Objective field value if set, zero value otherwise.
func (o *UpdateCompositeSloRequest) GetObjective() Objective {
	if o == nil || IsNil(o.Objective) {
		var ret Objective
		return ret
	}
	return *o.Objective
}

// GetObjectiveOk returns a tuple with the Objective field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCompositeSloRequest) GetObjectiveOk() (*Objective, bool) {
	if o == nil || IsNil(o.Objective) {
		return nil, false
	}
	return o.Objective, true
}

// HasObjective returns a boolean if a field has been set.
func (o *UpdateCompositeSloRequest) HasObjective() bool {
	if o != nil && !IsNil(o.Objective) {
		return true
	}

	return false
}

// SetObjective gets a reference to the given Objective and assigns it to the Objective field.
func (o *UpdateCompositeSloRequest) SetObjective(v Objective) {
	o.Objective = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *UpdateCompositeSloRequest) GetSources() CompositeSloResponseSources {
	if o == nil || IsNil(o.Sources) {
		var ret CompositeSloResponseSources
		return ret
	}
	return *o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCompositeSloRequest) GetSourcesOk() (*CompositeSloResponseSources, bool) {
	if o == nil || IsNil(o.Sources) {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *UpdateCompositeSloRequest) HasSources() bool {
	if o != nil && !IsNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given CompositeSloResponseSources and assigns it to the Sources field.
func (o *UpdateCompositeSloRequest) SetSources(v CompositeSloResponseSources) {
	o.Sources = &v
}

func (o UpdateCompositeSloRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCompositeSloRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TimeWindow) {
		toSerialize["timeWindow"] = o.TimeWindow
	}
	if !IsNil(o.BudgetingMethod) {
		toSerialize["budgetingMethod"] = o.BudgetingMethod
	}
	if !IsNil(o.CompositeMethod) {
		toSerialize["compositeMethod"] = o.CompositeMethod
	}
	if !IsNil(o.Objective) {
		toSerialize["objective"] = o.Objective
	}
	if !IsNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	return toSerialize, nil
}

type NullableUpdateCompositeSloRequest struct {
	value *UpdateCompositeSloRequest
	isSet bool
}

func (v NullableUpdateCompositeSloRequest) Get() *UpdateCompositeSloRequest {
	return v.value
}

func (v *NullableUpdateCompositeSloRequest) Set(val *UpdateCompositeSloRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCompositeSloRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCompositeSloRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCompositeSloRequest(val *UpdateCompositeSloRequest) *NullableUpdateCompositeSloRequest {
	return &NullableUpdateCompositeSloRequest{value: val, isSet: true}
}

func (v NullableUpdateCompositeSloRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCompositeSloRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
